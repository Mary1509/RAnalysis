data()
library()
exp(log(sin(1/2),base=7)-atan(sqrt(1+cos(0.05))))
x = c(1, 8, 2, 6, 3, 8, 5, 5, 5, 5)
x
y<-x[x>=5 & x<=6]
y
sum(y) # сума компонент вектора
prod(y) # добуток компонент вектора
diff(y) # різниця між сусідніми компонентами вектора.
z<-seq(-15,100,by=5)
z
x<-replace(z,z%%10==0,c(0))
x
y<-x[x>mean(x)]
y
sum(y)
vect<-c(-3,5,6,7,8,9,4,-4,-6,7,8,12,80,-5,0,6,21,-3,7,10)
M1<-matrix(vect,nrow=2)
M1
M2<-matrix(vect,ncol=2)
M2
vec <- numeric(18) #створення порожнього вектору з 18 елементів.
dim(vec)<-c(3,6) #задання розмірності для майбутньої матриці (3 рядка, 6
стовпчиків).
A <- edit(vec) #введення даних в матрицю з клавіатури
A
A*A #поелементне множення матриць
vec <- numeric(18) #створення порожнього вектору з 18 елементів.
dim(vec)<-c(3,6) #задання розмірності для майбутньої матриці (3 рядка, 6 стовпчиків).
A <- edit(vec) #введення даних в матрицю з клавіатури
A
A*A #поелементне множення матриць
vect1<-c(0,3,2,9,-5,6,0,5,7,3,-3,0) #введення даних у вектор
B<-matrix(vect1,nrow = 3, ncol = 4, byrow = TRUE) #створення матриці з 3 рядками і 4 стовпчиками
B
C<-t(B) #транспонування матриці.
C
D<-B%*%C
D
A<-C%*%B
A
solve(D)
D
solve(D)
vec <- numeric(16)
dim(vec)<-c(4,4)
A <- edit(vec)
A
diag(A)<-replace(diag(A), diag(A)> mean(A), c(0))
A
vec <- numeric(16)
dim(vec)<-c(4,4)
A <- edit(vec)
A
diag(A)<-replace(diag(A), diag(A)> mean(A), c(0))
A
a<-c(0,3,-2)
y<-solve(A,a) #розв’язання лінійного рівняння.
y
vect<-c(-3,5,6,7,8,9,4,-4,-6,7,8,12,80,-5,0,6,21,-3,7,10) #створення вектора
vect
g<-quantile(vect,c(0,0.25,0.5,0.75,1))
g
u<-cut(vect,breaks=g,labels=c('Перший','Другий', 'Третій', 'Четвертий'),
include.lowest=TRUE)
u
vik<-c(21,18,76,35,72,29,45,67,43,23,25,87,45,24,25) #створення вектора.
x<-sample(c(0,1),15,replace=TRUE)
x
mean(vik) #середній вік пацієнтів
save.image("~/R_labs/task3_wspc.RData")
savehistory("~/R_labs/task3_hstr.Rhistory")
